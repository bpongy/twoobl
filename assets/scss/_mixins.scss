
//	Responsive ratio item
//	example:
//	.video-4-3 {
//		@include tw_ratio(4/3);
//	}

@mixin tw_ratio($ratio) {
	padding-bottom: unquote(floor(100 * (1/$ratio)) + '%');
}



//	placeholder / placeholder with focus

@mixin tw_placeholder($color: $input-color-placeholder, $color-hover: rgba($input-color-placeholder, 0.4)) {
	&::-moz-placeholder           { color: $color; opacity: 1; }
	&:-ms-input-placeholder       { color: $color; }
	&::-webkit-input-placeholder  { color: $color; }
	&:focus::-moz-placeholder           { color: $color-hover; }
	&:focus:-ms-input-placeholder       { color: $color-hover; }
	&:focus::-webkit-input-placeholder  { color: $color-hover; }
}



//	Vertical align anything
//	example:
//	.my-container {
//		@include tw_vertical-align-inside();
//	}

@mixin tw_vertical-align-inside($pos: 50%) {
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;
	> * {
		position: relative;
		display: block;
		top: $pos;
		-webkit-transform: translateY(-$pos);
		-ms-transform: translateY(-$pos);
		transform: translateY(-$pos);
	}
}



//	Responsive everything
//	ex :
//	#test {
//		@include tw_responsive('border', '1px dashed red', '2px dashed olive', '5px dashed tomato');
//		@include tw_responsive('font-size', $font-size-h1, $font-size-h2 - 2px, inherit, $font-size-small);
//	}

@mixin tw_responsive($prop, $lg, $md, $sm, $xs: false) {
	@if $lg {
		#{$prop}: tw_get_prop($lg);
	}

	@if $xs {
		@media (max-width: $screen-xs-max) {
			#{$prop}: tw_get_prop($xs);
		}
		@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
			#{$prop}: tw_get_prop($sm);
		}
	} @else {
		@media (max-width: $screen-sm-max) {
			#{$prop}: tw_get_prop($sm);
		}
	}

	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
		#{$prop}: tw_get_prop($md);
	}
}
@function tw_get_prop($val) {
	@if type-of($val) == string {
		@return unquote($val);
	} @else {
		@return $val;
	}
}
